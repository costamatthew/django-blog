pip install django 
pillow -> imagens
django-summernote -> editor de texto
mysqlclient

------------------------------------
Depois de algumas atualizações do Django e do Summernote, agora é necessário adicionar o seguinte no "settings.py":

X_FRAME_OPTIONS = 'SAMEORIGIN'
Sem isso o Summernote não funcionará corretamente.

Você também pode ler mais sobre o Summernote no Github: https://github.com/summernote/django-summernote
------------------------------------
Criando um blog com Python e Django

Projeto blog -> django-admin startproject blog .

APPS
    categorias (sem views e urls)
    posts (com views e urls)
    comentarios (sem views e urls)
    summernotes

settings.py
    INSTALLED_APPS
    TEMPLATES dirs
    DATABASES - MySQL / SQLite / PostgreSQL
    LANGUAGE_CODE = 'pt-BR'
    TIME_ZONE = 'America/Sao_Paulo'
    STATIC_URL = '/static/'
    STATICFILES_DIRS
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    MEDIA_URL = '/media/'
    urlpatterns += static

    from django.contrib.messages import constants

    MESSAGE_TAGS = {
        constants.ERROR: 'alert-danger',
        constants.WARNING: 'alert-warning',
        constants.DEBUG: 'alert-info',
        constants.SUCCESS: 'alert-success',
        constants.INFO: 'alert-info',
    }

1 - Criar models com as seguintes características:
    * categoria
        id - IntegerField
        nome_cat - CharField

    * post
        id = IntegerField
        titulo - CharField
        autor - ForeignKey - User
        data - DateTimeField
        conteudo - TextField
        excerto - TextField
        categoria - ForeignKey - Categoria
        imagem - ImageField
        publicado - BooleanField

    * comentários
        id - IntegerField
        nome_comentario - CharField
        email_comentario - EmailField
        comentario - TextField
        post_comentario - ForeignKey - Post
        usuario_comentario - ForeignKey - User
        data_comentario - DateTimeField
        publicado_comentario - BooleanField

    Configurar ADMIN

2 - URLs
    / - index      
    post/<int:pk> - post_detalhes
    busca/ - post_busca
    categoria/<str:categoria> - post_categoria

3 - Views - usaremos class based views:
    class PostIndex
    class PostBusca
    class PostCategoria
    class PostDetalhes

4 - Forms
    Criar form de comentários

4 - Templates
    Bootstrap
